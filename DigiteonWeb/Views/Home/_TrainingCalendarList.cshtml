@model dynamic
@using PolarCastleWeb.Models

@if (Model.GetTrainingList != null && Model.GetTrainingList.Count > 0)
{
    foreach (TrainingResults loTraining in Model.GetTrainingList)
    {
        <tr>
            @{
                DateTime dtStartDate = Convert.ToDateTime(loTraining.dtStartDate);
                DateTime dtEndDate = Convert.ToDateTime(loTraining.dtEndDate);
            }
            <td>@dtStartDate.ToString("MMM dd").ToString()  -<br /> @dtEndDate.ToString("MMM dd").ToString()</td>
            <td>@loTraining.stLocation</td>
            <td>@loTraining.stLanguage</td>
            <td>@loTraining.stCourseName</td> 
            <td>
                <a class="btnEnroll" asp-area="" asp-controller="Home" asp-action="Enroll" asp-route-cname="@loTraining.stCourseName.Trim().Replace(" ","-").ToLower()" asp-route-id="@loTraining.unTrainingId">Enroll</a>
            </td>
        </tr>
    }
}
else
{
    <tr>
        <td colspan="8" class="text-center py-5">No records found.</td>
    </tr>
}

@{
    Pagination loPagination = Model.Pagination;

    <input type="hidden" id="hdnCurrentPage" value="@loPagination.inCurrentPage">
    <input type="hidden" id="hdnTotalPage" value="@loPagination.inTotalPages" />
    <input type="hidden" id="hdnTotalRecords" value="@loPagination.inTotalRecords" />
    <input type="hidden" id="hdnNoOfRecordsMessage" value="@loPagination.stNoOfRecordsMessage" />

}
